module FunscriptDancer

include("AudioAnalysis.jl")
include("Actions.jl")

using JSON

function main(video_file::String, multiplier::Real)
    out_path = "out"
    mkpath(out_path)

    data = analyze(video_file)

    actions = create_actions(data, create_default_normanised_energy_to_pos(multiplier))

    funscript = Dict(
        "metadata" => Dict(
            "creator" => "FunscriptDancer",
            "title" => data.name,
            "description" => "Procedurally generated by FunscriptDancer",
            "duration" => data.duration,
            "license" => "",
            "notes" => "",
            "performers" => (),
            "script_url" => "",
            "tags" => ("music", "audio"),
            "type" => "",
            "video_url" => ""
        ),
        "range" => 100,
        "inverted" => false,
        "version" => 1.0,
        "actions" => actions
    )

    funscript_json = JSON.json(funscript)

    funscript_file = open(joinpath(out_path, string(data.name, ".funscript")), "w")
    write(funscript_file, funscript_json)
    close(funscript_file)
end


end # module
